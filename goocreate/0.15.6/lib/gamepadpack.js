goo.GamepadComponent=function(t){"use strict";function a(a){t.apply(this,arguments),this.type="GamepadComponent",this.buttonDownFunctions={},this.buttonUpFunctions={},this.buttonPressedFunctions={},this.leftStickFunction=null,this.rightStickFunction=null,this.gamepadIndex=a||0}return a.prototype=Object.create(t.prototype),a.prototype.constructor=a,a.prototype.setButtonDownFunction=function(t,a){this.buttonDownFunctions[t]=a},a.prototype.setButtonUpFunction=function(t,a){this.buttonUpFunctions[t]=a},a.prototype.setButtonPressedFunction=function(t,a){this.buttonPressedFunctions[t]=a},a.prototype.setLeftStickFunction=function(t){this.leftStickFunction=t},a.prototype.setRightStickFunction=function(t){this.rightStickFunction=t},a}(goo.Component),goo.GamepadData=function(t){"use strict";function a(){this.leftStickDirection=new t,this.rightStickDirection=new t,this.buttonData={};for(var a=20,e=0;a>e;e++)this.buttonData[e]={pressed:!1,down:!1,value:0};this.leftAmount=0,this.rightAmount=0}return a.prototype.recalculateData=function(t){this.recalculateSticks(t),this.recalculateButtons(t)},a.prototype.resetData=function(t){for(var a=t.buttons.length,e=0;a>e;e++)this.buttonData[e].pressed=!1},a.prototype.recalculateButtons=function(t){for(var a=t.buttons,e=a.length,n=0;e>n;n++){var o=a[n];1===o?this.buttonData[n].down=!0:(this.buttonData[n].down===!0&&(this.buttonData[n].pressed=!0),this.buttonData[n].down=!1),this.buttonData[n].value=o}},a.prototype.recalculateSticks=function(t){var a=t.axes,e=a[0],n=a[1];this.calculateStickDirection(this.leftStickDirection,e,n),this.leftAmount=this.calculateStickAmount(e,n);var o=a[2],i=a[3];this.calculateStickDirection(this.rightStickDirection,o,i),this.rightAmount=this.calculateStickAmount(o,i)},a.prototype.calculateStickDirection=function(t,a,e){t.setDirect(a,e);var n=t.length();n>1e-7&&(t.data[0]/=n,t.data[1]/=n)},a.prototype.calculateStickAmount=function(t,a){return Math.max(Math.abs(t),Math.abs(a))},a}(goo.Vector2),goo.GamepadSystem=function(t,a){"use strict";function e(){t.call(this,"GamepadSystem",["GamepadComponent"]),this.gamepads=[],this.gamepadData=[];for(var e=4,n=0;e>n;n++)this.gamepadData[n]=new a;if(navigator.webkitGetGamepads)this.updateGamepads=this.chromeGamepadUpdate;else{this.updateGamepads=function(){};var o=this;window.addEventListener("gamepadconnected",function(t){o.mozGamepadHandler(t,!0)},!1),window.addEventListener("gamepaddisconnected",function(t){o.mozGamepadHandler(t,!1)},!1)}}return e.prototype.checkGamepadMapping=function(t){t.mapping?"standard"!==t.mapping&&console.warn("Non-standard mapping set on gamepad #"+t.index):console.warn("No mapping set on gamepad #"+t.index)},e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.prototype.mozGamepadHandler=function(t,a){var e=t.gamepad;a?(this.gamepads[e.index]=e,this.checkGamepadMapping(e)):delete this.gamepads[e.index]},e.prototype.chromeGamepadUpdate=function(){for(var t=navigator.webkitGetGamepads(),a=t.length,e=0;a>e;e++){var n=t[e];n&&(this.gamepads[n.index]=n)}},e.prototype.updateGamepadData=function(){this.updateGamepads();for(var t=this.gamepads.length,a=0;t>a;a++){var e=this.gamepads[a];e&&this.gamepadData[e.index].recalculateData(e)}},e.prototype.resetGamepadData=function(){for(var t=this.gamepads.length,a=0;t>a;a++){var e=this.gamepads[a];e&&this.gamepadData[e.index].resetData(e)}},e.prototype.process=function(t){this.updateGamepadData();for(var a=t.length,e=0;a>e;e++){var n=t[e],o=n.gamepadComponent,i=o.gamepadIndex,s=this.gamepadData[i],p=this.gamepads[i];if(!p)return;var c,r,u;o.leftStickFunction&&(c=p.axes[0],r=p.axes[1],u=[c,r],o.leftStickFunction(n,s.leftStickDirection,s.leftAmount,u)),o.rightStickFunction&&(c=p.axes[2],r=p.axes[3],u=[c,r],o.rightStickFunction(n,s.rightStickDirection,s.rightAmount,u));var d,m;for(d in o.buttonDownFunctions)m=s.buttonData[d],m.down===!0&&o.buttonDownFunctions[d](n,m.value);for(d in o.buttonUpFunctions)m=s.buttonData[d],m.down===!1&&o.buttonUpFunctions[d](n,m.value);for(d in o.buttonPressedFunctions)m=s.buttonData[d],m.pressed===!0&&o.buttonPressedFunctions[d](n,m.value)}this.resetGamepadData()},e}(goo.System,goo.GamepadData),"function"==typeof require&&(define("goo/addons/gamepadpack/GamepadComponent",[],function(){return goo.GamepadComponent}),define("goo/addons/gamepadpack/GamepadData",[],function(){return goo.GamepadData}),define("goo/addons/gamepadpack/GamepadSystem",[],function(){return goo.GamepadSystem}));